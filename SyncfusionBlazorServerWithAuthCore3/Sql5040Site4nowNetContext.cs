// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace SyncfusionBlazorServerWithAuthCore3
{
    public partial class Sql5040Site4nowNetContext : DbContext
    {
        public Sql5040Site4nowNetContext()
        {
        }

        public Sql5040Site4nowNetContext(DbContextOptions<Sql5040Site4nowNetContext> options)
            : base(options)
        {
        }

        public virtual DbSet<EventDetails> EventDetails { get; set; }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=sql5040.site4now.net;Persist Security Info=True;User ID=DB_A190BF_TrainMyBrain_admin;Password=hanlam88");
            }
        }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<EventDetails>(entity =>
            {
                entity.HasKey(e => e.EventId)
                    .HasName("PK__EventDet__7944C870FF33BC22");

                entity.Property(e => e.EventId).HasColumnName("EventID");

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DomainId).HasColumnName("DomainID");

                entity.Property(e => e.EndDate).HasColumnType("date");

                entity.Property(e => e.EventAddress)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EventCategoryId).HasColumnName("EventCategoryID");

                entity.Property(e => e.EventDescription).HasColumnType("text");

                entity.Property(e => e.EventName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LastSentDate).HasColumnType("datetime");

                entity.Property(e => e.SendTo)
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.StartDate).HasColumnType("date");

                entity.Property(e => e.UpdateDate).HasColumnType("datetime");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}